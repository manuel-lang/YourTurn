{"version":3,"file":"Manifest.js","sourceRoot":"","sources":["../../src/android/Manifest.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs-extra';\nimport { Builder, Parser } from 'xml2js';\n\nimport { EOL } from 'os';\nimport path from 'path';\n\nconst USES_PERMISSION = 'uses-permission';\n\ntype Document = { [key: string]: any };\n\nexport function removePermissions(doc: Document, permissionNames?: string[]) {\n  const targetNames = permissionNames ? permissionNames.map(ensurePermissionNameFormat) : null;\n  const permissions = doc.manifest[USES_PERMISSION] || [];\n  let nextPermissions = [];\n  for (let attribute of permissions) {\n    if (targetNames) {\n      const value = attribute['$']['android:name'] || attribute['$']['name'];\n      if (!targetNames.includes(value)) {\n        nextPermissions.push(attribute);\n      }\n    }\n  }\n\n  doc.manifest[USES_PERMISSION] = nextPermissions;\n}\n\nexport function addPermission(doc: Document, permissionName: string): void {\n  const usesPermissions: { [key: string]: any }[] = doc.manifest[USES_PERMISSION] || [];\n  usesPermissions.push({\n    $: { 'android:name': permissionName },\n  });\n  doc.manifest[USES_PERMISSION] = usesPermissions;\n}\n\nexport function ensurePermissions(\n  doc: Document,\n  permissionNames: string[]\n): { [permission: string]: boolean } {\n  const permissions = getPermissions(doc);\n\n  const results: { [permission: string]: boolean } = {};\n  for (const permissionName of permissionNames) {\n    const targetName = ensurePermissionNameFormat(permissionName);\n    if (!permissions.includes(targetName)) {\n      addPermission(doc, targetName);\n      results[permissionName] = true;\n    } else {\n      results[permissionName] = false;\n    }\n  }\n  return results;\n}\n\nexport function ensurePermission(doc: Document, permissionName: string): boolean {\n  const permissions = getPermissions(doc);\n  const targetName = ensurePermissionNameFormat(permissionName);\n\n  if (!permissions.includes(targetName)) {\n    addPermission(doc, targetName);\n    return true;\n  }\n  return false;\n}\n\nexport function ensurePermissionNameFormat(permissionName: string): string {\n  if (permissionName.includes('.')) {\n    const com = permissionName.split('.');\n    const name = com.pop() as string;\n    return [...com, name.toUpperCase()].join('.');\n  } else {\n    // If shorthand form like `WRITE_CONTACTS` is provided, expand it to `android.permission.WRITE_CONTACTS`.\n    return ensurePermissionNameFormat(`android.permission.${permissionName}`);\n  }\n}\n\nexport function getPermissionAttributes(doc: Document): Document[] {\n  return doc.manifest[USES_PERMISSION] || [];\n}\n\nexport function getPermissions(doc: Document): string[] {\n  const usesPermissions: { [key: string]: any }[] = doc.manifest[USES_PERMISSION] || [];\n  const permissions = usesPermissions.map(permissionObject => {\n    return permissionObject['$']['android:name'] || permissionObject['$']['name'];\n  });\n  return permissions;\n}\n\nexport function logManifest(doc: Document) {\n  const builder = new Builder();\n  const xmlInput = builder.buildObject(doc);\n  console.log(xmlInput);\n}\n\nconst stringTimesN = (n: number, char: string) => Array(n + 1).join(char);\n\nexport function format(manifest: any, { indentLevel = 2, newline = EOL } = {}): string {\n  let xmlInput: string;\n  if (typeof manifest === 'string') {\n    xmlInput = manifest;\n  } else if (manifest.toString) {\n    const builder = new Builder({ headless: true });\n    xmlInput = builder.buildObject(manifest);\n    return xmlInput;\n  } else {\n    throw new Error(`@expo/android-manifest: invalid manifest value passed in: ${manifest}`);\n  }\n  const indentString = stringTimesN(indentLevel, ' ');\n\n  let formatted = '';\n  const regex = /(>)(<)(\\/*)/g;\n  const xml = xmlInput.replace(regex, `$1${newline}$2$3`);\n  let pad = 0;\n  xml\n    .split(/\\r?\\n/)\n    .map((line: string) => line.trim())\n    .forEach((line: string) => {\n      let indent = 0;\n      if (line.match(/.+<\\/\\w[^>]*>$/)) {\n        indent = 0;\n      } else if (line.match(/^<\\/\\w/)) {\n        // Somehow istanbul doesn't see the else case as covered, although it is. Skip it.\n        /* istanbul ignore else  */\n        if (pad !== 0) {\n          pad -= 1;\n        }\n      } else if (line.match(/^<\\w([^>]*[^\\/])?>.*$/)) {\n        indent = 1;\n      } else {\n        indent = 0;\n      }\n\n      const padding = stringTimesN(pad, indentString);\n      formatted += padding + line + newline; // eslint-disable-line prefer-template\n      pad += indent;\n    });\n\n  return formatted.trim();\n}\n\nexport async function writeAndroidManifestAsync(\n  manifestPath: string,\n  manifest: any\n): Promise<void> {\n  const manifestXml = new Builder().buildObject(manifest);\n  await fs.ensureDir(path.dirname(manifestPath));\n  await fs.writeFile(manifestPath, manifestXml);\n}\n\nexport async function getProjectAndroidManifestPathAsync(\n  projectDir: string\n): Promise<string | null> {\n  try {\n    const shellPath = path.join(projectDir, 'android');\n    if ((await fs.stat(shellPath)).isDirectory()) {\n      const manifestPath = path.join(shellPath, 'app/src/main/AndroidManifest.xml');\n      if ((await fs.stat(manifestPath)).isFile()) {\n        return manifestPath;\n      }\n    }\n  } catch (error) {}\n\n  return null;\n}\n\nexport async function readAsync(manifestPath: string): Promise<Document> {\n  const contents = await fs.readFile(manifestPath, { encoding: 'utf8', flag: 'r' });\n  const parser = new Parser();\n  const manifest = parser.parseStringPromise(contents);\n  return manifest;\n}\n\nexport async function persistAndroidPermissionsAsync(\n  projectDir: string,\n  permissions: string[]\n): Promise<boolean> {\n  const manifestPath = await getProjectAndroidManifestPathAsync(projectDir);\n  // The Android Manifest takes priority over the app.json\n  if (!manifestPath) {\n    return false;\n  }\n  const manifest = await readAsync(manifestPath);\n  removePermissions(manifest);\n  const results = ensurePermissions(manifest, permissions);\n  if (Object.values(results).reduce((prev, current) => prev && current, true) === false) {\n    const failed = Object.keys(results).filter(key => !results[key]);\n    throw new Error(\n      `Failed to write the following permissions to the native AndroidManifest.xml: ${failed.join(\n        ', '\n      )}`\n    );\n  }\n\n  await writeAndroidManifestAsync(manifestPath, manifest);\n  return true;\n}\n\n// TODO(Bacon): link to resources about required permission prompts\nexport const UnimodulePermissions: { [key: string]: string } = {\n  'android.permission.READ_INTERNAL_STORAGE': 'READ_INTERNAL_STORAGE',\n  'android.permission.ACCESS_COARSE_LOCATION': 'ACCESS_COARSE_LOCATION',\n  'android.permission.ACCESS_FINE_LOCATION': 'ACCESS_FINE_LOCATION',\n  'android.permission.CAMERA': 'CAMERA',\n  'android.permission.MANAGE_DOCUMENTS': 'MANAGE_DOCUMENTS',\n  'android.permission.READ_CONTACTS': 'READ_CONTACTS',\n  'android.permission.READ_CALENDAR': 'READ_CALENDAR',\n  'android.permission.WRITE_CALENDAR': 'WRITE_CALENDAR',\n  'android.permission.READ_EXTERNAL_STORAGE': 'READ_EXTERNAL_STORAGE',\n  'android.permission.READ_PHONE_STATE': 'READ_PHONE_STATE',\n  'android.permission.RECORD_AUDIO': 'RECORD_AUDIO',\n  'android.permission.USE_FINGERPRINT': 'USE_FINGERPRINT',\n  'android.permission.VIBRATE': 'VIBRATE',\n  'android.permission.WAKE_LOCK': 'WAKE_LOCK',\n  'android.permission.WRITE_EXTERNAL_STORAGE': 'WRITE_EXTERNAL_STORAGE',\n  'com.anddoes.launcher.permission.UPDATE_COUNT': 'com.anddoes.launcher.permission.UPDATE_COUNT',\n  'com.android.launcher.permission.INSTALL_SHORTCUT':\n    'com.android.launcher.permission.INSTALL_SHORTCUT',\n  'com.google.android.c2dm.permission.RECEIVE': 'com.google.android.c2dm.permission.RECEIVE',\n  'com.google.android.gms.permission.ACTIVITY_RECOGNITION':\n    'com.google.android.gms.permission.ACTIVITY_RECOGNITION',\n  'com.google.android.providers.gsf.permission.READ_GSERVICES':\n    'com.google.android.providers.gsf.permission.READ_GSERVICES',\n  'com.htc.launcher.permission.READ_SETTINGS': 'com.htc.launcher.permission.READ_SETTINGS',\n  'com.htc.launcher.permission.UPDATE_SHORTCUT': 'com.htc.launcher.permission.UPDATE_SHORTCUT',\n  'com.majeur.launcher.permission.UPDATE_BADGE': 'com.majeur.launcher.permission.UPDATE_BADGE',\n  'com.sec.android.provider.badge.permission.READ':\n    'com.sec.android.provider.badge.permission.READ',\n  'com.sec.android.provider.badge.permission.WRITE':\n    'com.sec.android.provider.badge.permission.WRITE',\n  'com.sonyericsson.home.permission.BROADCAST_BADGE':\n    'com.sonyericsson.home.permission.BROADCAST_BADGE',\n};\n"]}