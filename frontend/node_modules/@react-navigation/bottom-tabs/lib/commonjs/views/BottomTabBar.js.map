{"version":3,"sources":["BottomTabBar.tsx"],"names":["DEFAULT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","BottomTabBar","state","navigation","descriptors","activeBackgroundColor","activeTintColor","adaptive","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","labelPosition","labelStyle","safeAreaInsets","showIcon","showLabel","style","tabStyle","colors","dimensions","setDimensions","React","useState","height","width","Dimensions","get","layout","setLayout","keyboardShown","setKeyboardShown","visible","Animated","Value","routes","useEffect","timing","toValue","duration","start","handleOrientationChange","window","handleKeyboardShow","handleKeyboardHide","finished","addEventListener","Keyboard","addListener","removeEventListener","removeListener","handleLayout","e","nativeEvent","shouldUseHorizontalLabels","maxTabItemWidth","flattenedStyle","StyleSheet","flatten","maxWidth","length","isLandscape","defaultInsets","insets","top","right","bottom","left","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","position","paddingBottom","paddingHorizontal","Math","max","content","map","route","index","focused","options","key","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","CommonActions","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","tabBarTestID","tabBarButton","tabBarIcon","create","borderTopWidth","hairlineWidth","elevation","flex","flexDirection"],"mappings":";;;;;;;AAAA;;AACA;;AAUA;;AAMA;;AAEA;;;;;;;;;;AAQA,MAAMA,qBAAqB,GAAG,EAA9B;AACA,MAAMC,0BAA0B,GAAG,GAAnC;AAEA,MAAMC,eAAe,GAAGC,sBAASC,EAAT,KAAgB,KAAxC;;AAEe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,KADmC;AAEnCC,EAAAA,UAFmC;AAGnCC,EAAAA,WAHmC;AAInCC,EAAAA,qBAJmC;AAKnCC,EAAAA,eALmC;AAMnCC,EAAAA,QAAQ,GAAG,IANwB;AAOnCC,EAAAA,gBAPmC;AAQnCC,EAAAA,uBARmC;AASnCC,EAAAA,iBATmC;AAUnCC,EAAAA,mBAAmB,GAAG,KAVa;AAWnCC,EAAAA,aAXmC;AAYnCC,EAAAA,UAZmC;AAanCC,EAAAA,cAbmC;AAcnCC,EAAAA,QAdmC;AAenCC,EAAAA,SAfmC;AAgBnCC,EAAAA,KAhBmC;AAiBnCC,EAAAA;AAjBmC,CAAtB,EAkBL;AAAA;;AACR,QAAM;AAAEC,IAAAA;AAAF,MAAa,uBAAnB;;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,eAAMC,QAAN,CAAe,MAAM;AACvD,UAAM;AAAEC,MAAAA,MAAM,GAAG,CAAX;AAAcC,MAAAA,KAAK,GAAG;AAAtB,QAA4BC,wBAAWC,GAAX,CAAe,QAAf,CAAlC;;AAEA,WAAO;AAAEH,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAP;AACD,GAJmC,CAApC;;AAMA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBP,eAAMC,QAAN,CAAe;AACzCC,IAAAA,MAAM,EAAE,CADiC;AAEzCC,IAAAA,KAAK,EAAEL,UAAU,CAACK;AAFuB,GAAf,CAA5B;;AAIA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCT,eAAMC,QAAN,CAAe,KAAf,CAA1C;;AAEA,QAAM,CAACS,OAAD,IAAYV,eAAMC,QAAN,CAAe,MAAM,IAAIU,sBAASC,KAAb,CAAmB,CAAnB,CAArB,CAAlB;;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAajC,KAAnB;;AAEAoB,iBAAMc,SAAN,CAAgB,MAAM;AACpB,QAAIN,aAAJ,EAAmB;AACjBG,4BAASI,MAAT,CAAgBL,OAAhB,EAAyB;AACvBM,QAAAA,OAAO,EAAE,CADc;AAEvBC,QAAAA,QAAQ,EAAE,GAFa;AAGvBzC,QAAAA;AAHuB,OAAzB,EAIG0C,KAJH;AAKD;AACF,GARD,EAQG,CAACV,aAAD,EAAgBE,OAAhB,CARH;;AAUAV,iBAAMc,SAAN,CAAgB,MAAM;AACpB,UAAMK,uBAAuB,GAAG,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAwC;AACtErB,MAAAA,aAAa,CAACqB,MAAD,CAAb;AACD,KAFD;;AAIA,UAAMC,kBAAkB,GAAG,MAAMZ,gBAAgB,CAAC,IAAD,CAAjD;;AAEA,UAAMa,kBAAkB,GAAG,MACzBX,sBAASI,MAAT,CAAgBL,OAAhB,EAAyB;AACvBM,MAAAA,OAAO,EAAE,CADc;AAEvBC,MAAAA,QAAQ,EAAE,GAFa;AAGvBzC,MAAAA;AAHuB,KAAzB,EAIG0C,KAJH,CAIS,CAAC;AAAEK,MAAAA;AAAF,KAAD,KAAkB;AACzB,UAAIA,QAAJ,EAAc;AACZd,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,KARD,CADF;;AAWAL,4BAAWoB,gBAAX,CAA4B,QAA5B,EAAsCL,uBAAtC;;AAEA,QAAI1C,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB+C,4BAASC,WAAT,CAAqB,kBAArB,EAAyCL,kBAAzC;;AACAI,4BAASC,WAAT,CAAqB,kBAArB,EAAyCJ,kBAAzC;AACD,KAHD,MAGO;AACLG,4BAASC,WAAT,CAAqB,iBAArB,EAAwCL,kBAAxC;;AACAI,4BAASC,WAAT,CAAqB,iBAArB,EAAwCJ,kBAAxC;AACD;;AAED,WAAO,MAAM;AACXlB,8BAAWuB,mBAAX,CAA+B,QAA/B,EAAyCR,uBAAzC;;AAEA,UAAI1C,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB+C,8BAASG,cAAT,CAAwB,kBAAxB,EAA4CP,kBAA5C;;AACAI,8BAASG,cAAT,CAAwB,kBAAxB,EAA4CN,kBAA5C;AACD,OAHD,MAGO;AACLG,8BAASG,cAAT,CAAwB,iBAAxB,EAA2CP,kBAA3C;;AACAI,8BAASG,cAAT,CAAwB,iBAAxB,EAA2CN,kBAA3C;AACD;AACF,KAVD;AAWD,GAvCD,EAuCG,CAACZ,OAAD,CAvCH;;AAyCA,QAAMmB,YAAY,GAAIC,CAAD,IAA0B;AAC7C,UAAM;AAAE5B,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAoB2B,CAAC,CAACC,WAAF,CAAczB,MAAxC;AAEAC,IAAAA,SAAS,CAAED,MAAD,IAAY;AACpB,UAAIJ,MAAM,KAAKI,MAAM,CAACJ,MAAlB,IAA4BC,KAAK,KAAKG,MAAM,CAACH,KAAjD,EAAwD;AACtD,eAAOG,MAAP;AACD,OAFD,MAEO;AACL,eAAO;AACLJ,UAAAA,MADK;AAELC,UAAAA;AAFK,SAAP;AAID;AACF,KATQ,CAAT;AAUD,GAbD;;AAeA,QAAM6B,yBAAyB,GAAG,MAAM;AACtC,QAAI1C,aAAJ,EAAmB;AACjB,aAAOA,aAAa,KAAK,aAAzB;AACD;;AAED,QAAI,CAACL,QAAL,EAAe;AACb,aAAO,KAAP;AACD;;AAED,QAAIqB,MAAM,CAACH,KAAP,IAAgB,GAApB,EAAyB;AACvB;AACA,UAAI8B,eAAe,GAAG1D,0BAAtB;;AAEA,YAAM2D,cAAc,GAAGC,wBAAWC,OAAX,CAAmBxC,QAAnB,CAAvB;;AAEA,UAAIsC,cAAJ,EAAoB;AAClB,YAAI,OAAOA,cAAc,CAAC/B,KAAtB,KAAgC,QAApC,EAA8C;AAC5C8B,UAAAA,eAAe,GAAGC,cAAc,CAAC/B,KAAjC;AACD,SAFD,MAEO,IAAI,OAAO+B,cAAc,CAACG,QAAtB,KAAmC,QAAvC,EAAiD;AACtDJ,UAAAA,eAAe,GAAGC,cAAc,CAACG,QAAjC;AACD;AACF;;AAED,aAAOxB,MAAM,CAACyB,MAAP,GAAgBL,eAAhB,IAAmC3B,MAAM,CAACH,KAAjD;AACD,KAfD,MAeO;AACL,YAAMoC,WAAW,GAAGzC,UAAU,CAACK,KAAX,GAAmBL,UAAU,CAACI,MAAlD;AAEA,aAAOqC,WAAP;AACD;AACF,GA7BD;;AA+BA,QAAMC,aAAa,GAAG,8CAAtB;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,GAAG,yBAAElD,cAAF,aAAEA,cAAF,uBAAEA,cAAc,CAAEkD,GAAlB,qEAAyBF,aAAa,CAACE,GAD7B;AAEbC,IAAAA,KAAK,2BAAEnD,cAAF,aAAEA,cAAF,uBAAEA,cAAc,CAAEmD,KAAlB,yEAA2BH,aAAa,CAACG,KAFjC;AAGbC,IAAAA,MAAM,2BAAEpD,cAAF,aAAEA,cAAF,uBAAEA,cAAc,CAAEoD,MAAlB,yEAA4BJ,aAAa,CAACI,MAHnC;AAIbC,IAAAA,IAAI,0BAAErD,cAAF,aAAEA,cAAF,uBAAEA,cAAc,CAAEqD,IAAlB,uEAA0BL,aAAa,CAACK;AAJ/B,GAAf;AAOA,sBACE,6BAAC,qBAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CACLC,MAAM,CAACC,MADF,EAEL;AACEC,MAAAA,eAAe,EAAEnD,MAAM,CAACoD,IAD1B;AAEEC,MAAAA,cAAc,EAAErD,MAAM,CAACsD;AAFzB,KAFK,EAML9D,mBAAmB,GACf;AACE;AACA+D,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,UAAU,EAAE3C,OAAO,CAAC4C,WAAR,CAAoB;AAC9BC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADkB;AAE9BC,UAAAA,WAAW,EAAE,CAAClD,MAAM,CAACJ,MAAR,EAAgB,CAAhB;AAFiB,SAApB;AADd,OADS,CAFb;AAUE;AACA;AACAuD,MAAAA,QAAQ,EAAEjD,aAAa,GAAG,UAAH,GAAgB;AAZzC,KADe,GAef,IArBC,EAsBL;AACEN,MAAAA,MAAM,EAAE5B,qBAAqB,GAAGmE,MAAM,CAACG,MADzC;AAEEc,MAAAA,aAAa,EAAEjB,MAAM,CAACG,MAFxB;AAGEe,MAAAA,iBAAiB,EAAEC,IAAI,CAACC,GAAL,CAASpB,MAAM,CAACI,IAAhB,EAAsBJ,MAAM,CAACE,KAA7B;AAHrB,KAtBK,EA2BLhD,KA3BK,CADT;AA8BE,IAAA,aAAa,EAAEN,mBAAmB,IAAImB,aAAvB,GAAuC,MAAvC,GAAgD;AA9BjE,kBAgCE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEsC,MAAM,CAACgB,OAApB;AAA6B,IAAA,QAAQ,EAAEjC;AAAvC,KACGhB,MAAM,CAACkD,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5B,UAAMC,OAAO,GAAGD,KAAK,KAAKrF,KAAK,CAACqF,KAAhC;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAcrF,WAAW,CAACkF,KAAK,CAACI,GAAP,CAA/B;;AAEA,UAAMC,OAAO,GAAG,MAAM;AACpB,YAAMC,KAAK,GAAGzF,UAAU,CAAC0F,IAAX,CAAgB;AAC5BC,QAAAA,IAAI,EAAE,UADsB;AAE5BC,QAAAA,MAAM,EAAET,KAAK,CAACI,GAFc;AAG5BM,QAAAA,iBAAiB,EAAE;AAHS,OAAhB,CAAd;;AAMA,UAAI,CAACR,OAAD,IAAY,CAACI,KAAK,CAACK,gBAAvB,EAAyC;AACvC9F,QAAAA,UAAU,CAAC+F,QAAX,mBACKC,sBAAcC,QAAd,CAAuBd,KAAK,CAACe,IAA7B,CADL;AAEEN,UAAAA,MAAM,EAAE7F,KAAK,CAACwF;AAFhB;AAID;AACF,KAbD;;AAeA,UAAMY,WAAW,GAAG,MAAM;AACxBnG,MAAAA,UAAU,CAAC0F,IAAX,CAAgB;AACdC,QAAAA,IAAI,EAAE,cADQ;AAEdC,QAAAA,MAAM,EAAET,KAAK,CAACI;AAFA,OAAhB;AAID,KALD;;AAOA,UAAMa,KAAK,GACTd,OAAO,CAACe,WAAR,KAAwBC,SAAxB,GACIhB,OAAO,CAACe,WADZ,GAEIf,OAAO,CAACiB,KAAR,KAAkBD,SAAlB,GACAhB,OAAO,CAACiB,KADR,GAEApB,KAAK,CAACe,IALZ;AAOA,UAAMM,kBAAkB,GACtBlB,OAAO,CAACmB,wBAAR,KAAqCH,SAArC,GACIhB,OAAO,CAACmB,wBADZ,GAEI,OAAOL,KAAP,KAAiB,QAAjB,aACGA,KADH,oBACkBhB,KAAK,GAAG,CAD1B,iBACkCpD,MAAM,CAACyB,MADzC,IAEA6C,SALN;AAOA,wBACE,6BAAC,yBAAD,CAAmB,QAAnB;AACE,MAAA,GAAG,EAAEnB,KAAK,CAACI,GADb;AAEE,MAAA,KAAK,EAAEtF,WAAW,CAACkF,KAAK,CAACI,GAAP,CAAX,CAAuBvF;AAFhC,oBAIE,6BAAC,8BAAD,CAAwB,QAAxB;AAAiC,MAAA,KAAK,EAAEmF;AAAxC,oBACE,6BAAC,sBAAD;AACE,MAAA,KAAK,EAAEA,KADT;AAEE,MAAA,OAAO,EAAEE,OAFX;AAGE,MAAA,UAAU,EAAElC,yBAAyB,EAHvC;AAIE,MAAA,OAAO,EAAEqC,OAJX;AAKE,MAAA,WAAW,EAAEW,WALf;AAME,MAAA,kBAAkB,EAAEK,kBANtB;AAOE,MAAA,MAAM,EAAElB,OAAO,CAACoB,YAPlB;AAQE,MAAA,gBAAgB,EAAErG,gBARpB;AASE,MAAA,eAAe,EAAEF,eATnB;AAUE,MAAA,iBAAiB,EAAEI,iBAVrB;AAWE,MAAA,qBAAqB,EAAEL,qBAXzB;AAYE,MAAA,uBAAuB,EAAEI,uBAZ3B;AAaE,MAAA,MAAM,EAAEgF,OAAO,CAACqB,YAblB;AAcE,MAAA,IAAI,EAAErB,OAAO,CAACsB,UAdhB;AAeE,MAAA,KAAK,EAAER,KAfT;AAgBE,MAAA,QAAQ,EAAExF,QAhBZ;AAiBE,MAAA,SAAS,EAAEC,SAjBb;AAkBE,MAAA,UAAU,EAAEH,UAlBd;AAmBE,MAAA,KAAK,EAAEK;AAnBT,MADF,CAJF,CADF;AA8BD,GAtEA,CADH,CAhCF,CADF;AA4GD;;AAED,MAAMkD,MAAM,GAAGX,wBAAWuD,MAAX,CAAkB;AAC/B3C,EAAAA,MAAM,EAAE;AACNF,IAAAA,IAAI,EAAE,CADA;AAENF,IAAAA,KAAK,EAAE,CAFD;AAGNC,IAAAA,MAAM,EAAE,CAHF;AAIN+C,IAAAA,cAAc,EAAExD,wBAAWyD,aAJrB;AAKNC,IAAAA,SAAS,EAAE;AALL,GADuB;AAQ/B/B,EAAAA,OAAO,EAAE;AACPgC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE;AAFR;AARsB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Keyboard,\n  Platform,\n  LayoutChangeEvent,\n  ScaledSize,\n  Dimensions,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  CommonActions,\n  useTheme,\n} from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport { BottomTabBarProps } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 50;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive = true,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  safeAreaInsets,\n  showIcon,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n\n  const [dimensions, setDimensions] = React.useState(() => {\n    const { height = 0, width = 0 } = Dimensions.get('window');\n\n    return { height, width };\n  });\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n  const [keyboardShown, setKeyboardShown] = React.useState(false);\n\n  const [visible] = React.useState(() => new Animated.Value(1));\n\n  const { routes } = state;\n\n  React.useEffect(() => {\n    if (keyboardShown) {\n      Animated.timing(visible, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver,\n      }).start();\n    }\n  }, [keyboardShown, visible]);\n\n  React.useEffect(() => {\n    const handleOrientationChange = ({ window }: { window: ScaledSize }) => {\n      setDimensions(window);\n    };\n\n    const handleKeyboardShow = () => setKeyboardShown(true);\n\n    const handleKeyboardHide = () =>\n      Animated.timing(visible, {\n        toValue: 1,\n        duration: 250,\n        useNativeDriver,\n      }).start(({ finished }) => {\n        if (finished) {\n          setKeyboardShown(false);\n        }\n      });\n\n    Dimensions.addEventListener('change', handleOrientationChange);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      Dimensions.removeEventListener('change', handleOrientationChange);\n\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, [visible]);\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const shouldUseHorizontalLabels = () => {\n    if (labelPosition) {\n      return labelPosition === 'beside-icon';\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (layout.width >= 768) {\n      // Screen size matches a tablet\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= layout.width;\n    } else {\n      const isLandscape = dimensions.width > dimensions.height;\n\n      return isLandscape;\n    }\n  };\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        keyboardHidesTabBar\n          ? {\n              // When the keyboard is shown, slide down the tab bar\n              transform: [\n                {\n                  translateY: visible.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [layout.height, 0],\n                  }),\n                },\n              ],\n              // Absolutely position the tab bar so that the content is below it\n              // This is needed to avoid gap at bottom when the tab bar is hidden\n              position: keyboardShown ? 'absolute' : null,\n            }\n          : null,\n        {\n          height: DEFAULT_TABBAR_HEIGHT + insets.bottom,\n          paddingBottom: insets.bottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={keyboardHidesTabBar && keyboardShown ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={shouldUseHorizontalLabels()}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  label={label}\n                  showIcon={showIcon}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]}