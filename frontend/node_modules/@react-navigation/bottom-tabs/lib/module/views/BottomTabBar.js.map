{"version":3,"sources":["BottomTabBar.tsx"],"names":["React","View","Animated","StyleSheet","Keyboard","Platform","Dimensions","NavigationContext","NavigationRouteContext","CommonActions","useTheme","useSafeArea","BottomTabItem","DEFAULT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","OS","BottomTabBar","state","navigation","descriptors","activeBackgroundColor","activeTintColor","adaptive","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","labelPosition","labelStyle","safeAreaInsets","showIcon","showLabel","style","tabStyle","colors","dimensions","setDimensions","useState","height","width","get","layout","setLayout","keyboardShown","setKeyboardShown","visible","Value","routes","useEffect","timing","toValue","duration","start","handleOrientationChange","window","handleKeyboardShow","handleKeyboardHide","finished","addEventListener","addListener","removeEventListener","removeListener","handleLayout","e","nativeEvent","shouldUseHorizontalLabels","maxTabItemWidth","flattenedStyle","flatten","maxWidth","length","isLandscape","defaultInsets","insets","top","right","bottom","left","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","position","paddingBottom","paddingHorizontal","Math","max","content","map","route","index","focused","options","key","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","tabBarTestID","tabBarButton","tabBarIcon","create","borderTopWidth","hairlineWidth","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Keyboard,\n  Platform,\n  LayoutChangeEvent,\n  ScaledSize,\n  Dimensions,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  CommonActions,\n  useTheme,\n} from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport { BottomTabBarProps } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 50;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive = true,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  safeAreaInsets,\n  showIcon,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n\n  const [dimensions, setDimensions] = React.useState(() => {\n    const { height = 0, width = 0 } = Dimensions.get('window');\n\n    return { height, width };\n  });\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n  const [keyboardShown, setKeyboardShown] = React.useState(false);\n\n  const [visible] = React.useState(() => new Animated.Value(1));\n\n  const { routes } = state;\n\n  React.useEffect(() => {\n    if (keyboardShown) {\n      Animated.timing(visible, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver,\n      }).start();\n    }\n  }, [keyboardShown, visible]);\n\n  React.useEffect(() => {\n    const handleOrientationChange = ({ window }: { window: ScaledSize }) => {\n      setDimensions(window);\n    };\n\n    const handleKeyboardShow = () => setKeyboardShown(true);\n\n    const handleKeyboardHide = () =>\n      Animated.timing(visible, {\n        toValue: 1,\n        duration: 250,\n        useNativeDriver,\n      }).start(({ finished }) => {\n        if (finished) {\n          setKeyboardShown(false);\n        }\n      });\n\n    Dimensions.addEventListener('change', handleOrientationChange);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      Dimensions.removeEventListener('change', handleOrientationChange);\n\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, [visible]);\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const shouldUseHorizontalLabels = () => {\n    if (labelPosition) {\n      return labelPosition === 'beside-icon';\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (layout.width >= 768) {\n      // Screen size matches a tablet\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= layout.width;\n    } else {\n      const isLandscape = dimensions.width > dimensions.height;\n\n      return isLandscape;\n    }\n  };\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        keyboardHidesTabBar\n          ? {\n              // When the keyboard is shown, slide down the tab bar\n              transform: [\n                {\n                  translateY: visible.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [layout.height, 0],\n                  }),\n                },\n              ],\n              // Absolutely position the tab bar so that the content is below it\n              // This is needed to avoid gap at bottom when the tab bar is hidden\n              position: keyboardShown ? 'absolute' : null,\n            }\n          : null,\n        {\n          height: DEFAULT_TABBAR_HEIGHT + insets.bottom,\n          paddingBottom: insets.bottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={keyboardHidesTabBar && keyboardShown ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={shouldUseHorizontalLabels()}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  label={label}\n                  showIcon={showIcon}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]}