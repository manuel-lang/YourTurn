{"version":3,"sources":["TabBarIcon.tsx"],"names":["React","View","StyleSheet","TabBarIcon","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","size","style","styles","icon","opacity","focused","color","create","position","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAuD,cAAvD;AAkBA,eAAe,SAASC,UAAT,CAAoB;AACjCC,EAAAA,aADiC;AAEjCC,EAAAA,eAFiC;AAGjCC,EAAAA,eAHiC;AAIjCC,EAAAA,iBAJiC;AAKjCC,EAAAA,UALiC;AAMjCC,EAAAA,IANiC;AAOjCC,EAAAA;AAPiC,CAApB,EAQL;AACR;AACA;AACA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEA;AAAb,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAc;AAAEC,MAAAA,OAAO,EAAET;AAAX,KAAd;AAAb,KACGI,UAAU,CAAC;AACVM,IAAAA,OAAO,EAAE,IADC;AAEVL,IAAAA,IAFU;AAGVM,IAAAA,KAAK,EAAET;AAHG,GAAD,CADb,CADF,eAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACK,MAAM,CAACC,IAAR,EAAc;AAAEC,MAAAA,OAAO,EAAER;AAAX,KAAd;AAAb,KACGG,UAAU,CAAC;AACVM,IAAAA,OAAO,EAAE,KADC;AAEVL,IAAAA,IAFU;AAGVM,IAAAA,KAAK,EAAER;AAHG,GAAD,CADb,CARF,CADF;AAkBD;AAED,MAAMI,MAAM,GAAGT,UAAU,CAACc,MAAX,CAAkB;AAC/BJ,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACAK,IAAAA,QAAQ,EAAE,UAJN;AAKJC,IAAAA,SAAS,EAAE,QALP;AAMJC,IAAAA,UAAU,EAAE,QANR;AAOJC,IAAAA,cAAc,EAAE,QAPZ;AAQJC,IAAAA,MAAM,EAAE,MARJ;AASJC,IAAAA,KAAK,EAAE,MATH;AAUJ;AACAC,IAAAA,QAAQ,EAAE;AAXN;AADyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport { Route } from '@react-navigation/native';\n\ntype Props = {\n  route: Route<string>;\n  size: number;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor: string;\n  inactiveTintColor: string;\n  renderIcon: (props: {\n    focused: boolean;\n    color: string;\n    size: number;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default function TabBarIcon({\n  activeOpacity,\n  inactiveOpacity,\n  activeTintColor,\n  inactiveTintColor,\n  renderIcon,\n  size,\n  style,\n}: Props) {\n  // We render the icon twice at the same position on top of each other:\n  // active and inactive one, so we can fade between them.\n  return (\n    <View style={style}>\n      <View style={[styles.icon, { opacity: activeOpacity }]}>\n        {renderIcon({\n          focused: true,\n          size,\n          color: activeTintColor,\n        })}\n      </View>\n      <View style={[styles.icon, { opacity: inactiveOpacity }]}>\n        {renderIcon({\n          focused: false,\n          size,\n          color: inactiveTintColor,\n        })}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n});\n"]}