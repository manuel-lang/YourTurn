{"version":3,"sources":["NavigationContainer.tsx"],"names":["NavigationContainer","React","forwardRef","ref","theme","DefaultTheme","rest","refContainer","useRef","useImperativeHandle","current"],"mappings":";;;;;;;AAAA;;AACA;;AAKA;;AACA;;AACA;;;;;;;;;;;;;;AAOA;;;;;;;;;;;AAWA,MAAMA,mBAAmB,GAAGC,KAAK,CAACC,UAAN,CAAiB,SAASF,mBAAT,OAE3CG,GAF2C,EAG3C;AAAA,MAFA;AAAEC,IAAAA,KAAK,GAAGC;AAAV,GAEA;AAAA,MAF2BC,IAE3B;;AACA,QAAMC,YAAY,GAAGN,KAAK,CAACO,MAAN,CAAqC,IAArC,CAArB;AAEA,8BAAcD,YAAd;AAEAN,EAAAA,KAAK,CAACQ,mBAAN,CAA0BN,GAA1B,EAA+B,MAAMI,YAAY,CAACG,OAAlD;AAEA,sBACE,oBAAC,sBAAD;AAAe,IAAA,KAAK,EAAEN;AAAtB,kBACE,oBAAC,6BAAD,eAA6BE,IAA7B;AAAmC,IAAA,GAAG,EAAEC;AAAxC,KADF,CADF;AAKD,CAf2B,CAA5B;eAiBeP,mB","sourcesContent":["import * as React from 'react';\nimport {\n  BaseNavigationContainer,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from '@react-navigation/core';\nimport ThemeProvider from './theming/ThemeProvider';\nimport DefaultTheme from './theming/DefaultTheme';\nimport useBackButton from './useBackButton';\nimport { Theme } from './types';\n\ntype Props = NavigationContainerProps & {\n  theme?: Theme;\n};\n\n/**\n * Container component which holds the navigation state\n * designed for mobile apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst NavigationContainer = React.forwardRef(function NavigationContainer(\n  { theme = DefaultTheme, ...rest }: Props,\n  ref?: React.Ref<NavigationContainerRef | null>\n) {\n  const refContainer = React.useRef<NavigationContainerRef>(null);\n\n  useBackButton(refContainer);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  return (\n    <ThemeProvider value={theme}>\n      <BaseNavigationContainer {...rest} ref={refContainer} />\n    </ThemeProvider>\n  );\n});\n\nexport default NavigationContainer;\n"]}