{"version":3,"sources":["useOnGetState.tsx"],"names":["React","NavigationBuilderContext","NavigationRouteContext","useOnGetState","getStateForRoute","getState","addStateGetter","useContext","route","key","getRehydratedState","useCallback","state","routes","map","useEffect"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AAEA,eAAe,SAASC,aAAT,CAAuB;AACpCC,EAAAA,gBADoC;AAEpCC,EAAAA;AAFoC,CAAvB,EAMZ;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAqBN,KAAK,CAACO,UAAN,CAAiBN,wBAAjB,CAA3B;AACA,QAAMO,KAAK,GAAGR,KAAK,CAACO,UAAN,CAAiBL,sBAAjB,CAAd;AACA,QAAMO,GAAG,GAAGD,KAAK,GAAGA,KAAK,CAACC,GAAT,GAAe,MAAhC;AAEA,QAAMC,kBAAkB,GAAGV,KAAK,CAACW,WAAN,CAAkB,MAAM;AACjD,UAAMC,KAAK,GAAGP,QAAQ,EAAtB;AACA,6BACKO,KADL;AAEEC,MAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAkBN,KAAD,sBACpBA,KADoB;AAEvBI,QAAAA,KAAK,EAAER,gBAAgB,CAACI,KAAK,CAACC,GAAP;AAFA,QAAjB;AAFV;AAOD,GAT0B,EASxB,CAACJ,QAAD,EAAWD,gBAAX,CATwB,CAA3B;AAWAJ,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACpB,WAAOT,cAAP,aAAOA,cAAP,uBAAOA,cAAc,CAAGG,GAAH,EAAQC,kBAAR,CAArB;AACD,GAFD,EAEG,CAACJ,cAAD,EAAiBI,kBAAjB,EAAqCD,GAArC,CAFH;AAGD","sourcesContent":["import * as React from 'react';\nimport { NavigationState } from '@react-navigation/routers';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\n\nexport default function useOnGetState({\n  getStateForRoute,\n  getState,\n}: {\n  getStateForRoute: (routeName: string) => NavigationState | undefined;\n  getState: () => NavigationState;\n}) {\n  const { addStateGetter } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n    return {\n      ...state,\n      routes: state.routes.map((route) => ({\n        ...route,\n        state: getStateForRoute(route.key),\n      })),\n    };\n  }, [getState, getStateForRoute]);\n\n  React.useEffect(() => {\n    return addStateGetter?.(key, getRehydratedState);\n  }, [addStateGetter, getRehydratedState, key]);\n}\n"]}