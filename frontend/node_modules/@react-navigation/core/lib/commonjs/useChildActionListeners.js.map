{"version":3,"sources":["useChildActionListeners.tsx"],"names":["useChildActionListeners","current","listeners","React","useRef","addListener","useCallback","listener","push","index","indexOf","splice"],"mappings":";;;;;;;AAAA;;;;;;AAGA;;;AAGe,SAASA,uBAAT,GAAmC;AAChD,QAAM;AAAEC,IAAAA,OAAO,EAAEC;AAAX,MAAyBC,KAAK,CAACC,MAAN,CAAoC,EAApC,CAA/B;AAEA,QAAMC,WAAW,GAAGF,KAAK,CAACG,WAAN,CACjBC,QAAD,IAAmC;AACjCL,IAAAA,SAAS,CAACM,IAAV,CAAeD,QAAf;AAEA,WAAO,MAAM;AACX,YAAME,KAAK,GAAGP,SAAS,CAACQ,OAAV,CAAkBH,QAAlB,CAAd;AAEAL,MAAAA,SAAS,CAACS,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;AACD,KAJD;AAKD,GATiB,EAUlB,CAACP,SAAD,CAVkB,CAApB;AAaA,SAAO;AACLA,IAAAA,SADK;AAELG,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import * as React from 'react';\nimport { ChildActionListener } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add action listeners.\n */\nexport default function useChildActionListeners() {\n  const { current: listeners } = React.useRef<ChildActionListener[]>([]);\n\n  const addListener = React.useCallback(\n    (listener: ChildActionListener) => {\n      listeners.push(listener);\n\n      return () => {\n        const index = listeners.indexOf(listener);\n\n        listeners.splice(index, 1);\n      };\n    },\n    [listeners]\n  );\n\n  return {\n    listeners,\n    addListener,\n  };\n}\n"]}